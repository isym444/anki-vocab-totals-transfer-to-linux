import json
import urllib.request
import datetime
import csv

CSV_FILENAME = "/Users/samir/Documents/Programming/Portuguese_word_counts_temp.csv"

def request(action, **params):
    return {"action": action, "params": params, "version": 6}

def invoke(action, **params):
    request_json = json.dumps(request(action, **params)).encode("utf-8")
    response = json.load(
        urllib.request.urlopen(
            urllib.request.Request("http://localhost:8765", request_json)
        )
    )
    if len(response) != 2:
        raise Exception("response has an unexpected number of fields")
    if "error" not in response:
        raise Exception("response is missing required error field")
    if "result" not in response:
        raise Exception("response is missing required result field")
    if response["error"] is not None:
        raise Exception(response["error"])
    return response["result"]

def get_card_count(deck_name, month_start, month_end):
    query = f'"deck:{deck_name}" added:{month_start} -added:{month_end}'
    cards = invoke("findCards", query=query)
    return len(cards)

def generate_monthly_counts(deck_name, start_date, end_date):
    current_date = start_date
    monthly_counts = {}

    while current_date <= end_date:
        next_month = current_date + datetime.timedelta(days=31)
        next_month = next_month.replace(day=1)
        
        month_start = current_date.strftime("%Y-%m-%d")
        month_end = next_month.strftime("%Y-%m-%d")
        
        count = get_card_count(deck_name, month_start, month_end)
        monthly_counts[month_start[:7]] = count
        
        current_date = next_month

    return monthly_counts

def save_to_csv(data, filename):
    with open(filename, "w", newline='') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(["Month", "Count"])
        for month, count in data.items():
            writer.writerow([month, count])

deck_name = "0 Portuguese > English â€“ Phrase Book _sorted"
start_date = datetime.date(2017, 9, 29)  # Change this to your start date
end_date = datetime.date.today()

monthly_counts = generate_monthly_counts(deck_name, start_date, end_date)
save_to_csv(monthly_counts, CSV_FILENAME)